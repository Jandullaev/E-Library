import * as oclif from '@oclif/core';
import * as Framework from '@roots/bud-framework';
import { Bud } from '../../';
import * as CLI from '../cli.interface';
import { Notifier } from '../Notifier';
import { Runner } from '../Runner';
/**
 * cli base command
 *
 * @internal
 */
export declare abstract class Command extends oclif.Command {
    /**
     * Application instance
     *
     * @internal
     */
    app: Bud;
    /**
     * Build helper
     *
     * @internal
     */
    runner: Runner;
    /**
     * Node notifier
     *
     * @internal
     */
    notifier: Notifier;
    /**
     * Command parser output object
     *
     * @internal
     */
    cli: CLI.Options;
    /**
     * Command flags
     *
     * @internal
     */
    static flags: {
        log: import("../flags/flags.interface").Boolean;
        "log.level": import("../flags/flags.interface").Option<string>;
        "log.papertrail": import("../flags/flags.interface").Boolean;
        "log.secret": import("../flags/flags.interface").Option<string[]>;
        "log.min": import("../flags/flags.interface").Boolean;
        help: any;
        version: any;
    };
    /**
     * Command logging instance
     *
     * @internal
     */
    logger: Framework.Logger['instance'];
    /**
     * @internal
     */
    prime(command: any): Promise<void>;
    /**
     * @internal
     */
    build(): Promise<void>;
}
//# sourceMappingURL=index.d.ts.map
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Command = void 0;
const oclif = __importStar(require("@oclif/core"));
const flags = __importStar(require("../flags"));
const Notifier_1 = require("../Notifier");
const Runner_1 = require("../Runner");
/**
 * cli base command
 *
 * @internal
 */
class Command extends oclif.Command {
    /**
     * @internal
     */
    async prime(command) {
        this.cli = await this.parse(command);
        this.runner = new Runner_1.Runner(this.cli);
        this.app = await this.runner.initialize();
        this.logger = this.app.logger.makeInstance();
        this.runner.logger = this.logger;
        this.notifier = new Notifier_1.Notifier(this.app);
    }
    /**
     * @internal
     */
    async build() {
        await this.runner.make();
    }
}
exports.Command = Command;
/**
 * Command flags
 *
 * @internal
 */
Command.flags = {
    ...flags.base,
    ...flags.log,
};

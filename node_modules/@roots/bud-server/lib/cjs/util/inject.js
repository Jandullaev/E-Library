"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.inject = void 0;
const lodash_1 = require("lodash");
/**
 * Injects webpack entrypoints with HMR client scripts.
 *
 * Filters on `webpack.entry`
 *
 * @public
 */
const inject = async (instance, injection) => {
    instance.hooks.on('build.entry', entrypoints => {
        if (instance.hasChildren) {
            instance.log(`${instance.name} is a parent compiler`, `skipping inject`);
            return entrypoints;
        }
        const invalidEntrypoints = !entrypoints ||
            (0, lodash_1.isUndefined)(entrypoints) ||
            (0, lodash_1.isNull)(entrypoints) ||
            !injection;
        if (invalidEntrypoints) {
            instance.warn(`${instance.name} entrypoints are malformed`, `skipping inject`);
            return entrypoints;
        }
        return Object.entries(entrypoints).reduce((entrypoints, [name, entry]) => {
            if (!entry)
                return entrypoints;
            entry.import = [
                ...new Set([
                    ...injection.map(inject => inject(instance)),
                    ...(entry.import ?? []),
                ]),
            ];
            return { ...entrypoints, [name]: entry };
        }, {});
    });
};
exports.inject = inject;

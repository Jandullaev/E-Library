"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alias = void 0;
const path_1 = require("path");
/**
 * Register shorthand for resolving modules using webpack aliases.
 *
 * @remarks
 * Useful for situations that may otherwise require brittle relative paths.
 *
 * @example
 * ```js
 * app.alias({
 *   '@scripts': app.path('src', 'scripts'),
 * })
 * ```
 *
 * @param alias - module redirections
 * @returns configuration instance
 *
 * @public
 */
const alias = function (alias) {
    this;
    const mergeAliases = Object.entries(alias).reduce((a, [k, v]) => {
        const path = (0, path_1.resolve)(this.path('project'), v);
        this.api.log('success', {
            message: `alias ${k}`,
            suffix: path,
        });
        return {
            ...a,
            [k]: (0, path_1.resolve)(this.path('project'), v),
        };
    }, {});
    this.hooks.on('build.resolve.alias', async (aliases) => {
        return {
            ...aliases,
            ...mergeAliases,
        };
    });
    return this;
};
exports.alias = alias;
